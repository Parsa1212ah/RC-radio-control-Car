
AVRASM ver. 2.1.30  C:\Users\Parsa.Ah\OneDrive\My project\RC Car\codevision\R\Debug\List\R_RC Car.asm Thu Feb 25 21:40:22 2021

C:\Users\Parsa.Ah\OneDrive\My project\RC Car\codevision\R\Debug\List\R_RC Car.asm(1088): warning: Register r5 already defined by the .DEF directive
C:\Users\Parsa.Ah\OneDrive\My project\RC Car\codevision\R\Debug\List\R_RC Car.asm(1089): warning: Register r4 already defined by the .DEF directive
                 
                 
                 ;CodeVisionAVR C Compiler V3.12 Advanced
                 ;(C) Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
                 ;http://www.hpinfotech.com
                 
                 ;Build configuration    : Debug
                 ;Chip type              : ATmega16A
                 ;Program type           : Application
                 ;Clock frequency        : 8/000000 MHz
                 ;Memory model           : Small
                 ;Optimize for           : Size
                 ;(s)printf features     : int, width
                 ;(s)scanf features      : int, width
                 ;External RAM size      : 0
                 ;Data Stack size        : 256 byte(s)
                 ;Heap size              : 0 byte(s)
                 ;Promote 'char' to 'int': Yes
                 ;'char' is unsigned     : Yes
                 ;8 bit enums            : Yes
                 ;Global 'const' stored in FLASH: Yes
                 ;Enhanced function parameter passing: Yes
                 ;Enhanced core instructions: On
                 ;Automatic register allocation for global variables: On
                 ;Smart register allocation: On
                 
                 	#define _MODEL_SMALL_
                 
                 	#pragma AVRPART ADMIN PART_NAME ATmega16A
                 	#pragma AVRPART MEMORY PROG_FLASH 16384
                 	#pragma AVRPART MEMORY EEPROM 512
                 	#pragma AVRPART MEMORY INT_SRAM SIZE 1024
                 	#pragma AVRPART MEMORY INT_SRAM START_ADDR 0x60
                 
                 	#define CALL_SUPPORTED 1
                 
                 	.LISTMAC
                 	.EQU UDRE=0x5
                 	.EQU RXC=0x7
                 	.EQU USR=0xB
                 	.EQU UDR=0xC
                 	.EQU SPSR=0xE
                 	.EQU SPDR=0xF
                 	.EQU EERE=0x0
                 	.EQU EEWE=0x1
                 	.EQU EEMWE=0x2
                 	.EQU EECR=0x1C
                 	.EQU EEDR=0x1D
                 	.EQU EEARL=0x1E
                 	.EQU EEARH=0x1F
                 	.EQU WDTCR=0x21
                 	.EQU MCUCR=0x35
                 	.EQU GICR=0x3B
                 	.EQU SPL=0x3D
                 	.EQU SPH=0x3E
                 	.EQU SREG=0x3F
                 
                 	.DEF R0X0=R0
                 	.DEF R0X1=R1
                 	.DEF R0X2=R2
                 	.DEF R0X3=R3
                 	.DEF R0X4=R4
                 	.DEF R0X5=R5
                 	.DEF R0X6=R6
                 	.DEF R0X7=R7
                 	.DEF R0X8=R8
                 	.DEF R0X9=R9
                 	.DEF R0XA=R10
                 	.DEF R0XB=R11
                 	.DEF R0XC=R12
                 	.DEF R0XD=R13
                 	.DEF R0XE=R14
                 	.DEF R0XF=R15
                 	.DEF R0X10=R16
                 	.DEF R0X11=R17
                 	.DEF R0X12=R18
                 	.DEF R0X13=R19
                 	.DEF R0X14=R20
                 	.DEF R0X15=R21
                 	.DEF R0X16=R22
                 	.DEF R0X17=R23
                 	.DEF R0X18=R24
                 	.DEF R0X19=R25
                 	.DEF R0X1A=R26
                 	.DEF R0X1B=R27
                 	.DEF R0X1C=R28
                 	.DEF R0X1D=R29
                 	.DEF R0X1E=R30
                 	.DEF R0X1F=R31
                 
                 	.EQU __SRAM_START=0x0060
                 	.EQU __SRAM_END=0x045F
                 	.EQU __DSTACK_SIZE=0x0100
                 	.EQU __HEAP_SIZE=0x0000
                 	.EQU __CLEAR_SRAM_SIZE=__SRAM_END-__SRAM_START+1
                 
                 	.MACRO __CPD1N
                 	CPI  R30,LOW(@0)
                 	LDI  R26,HIGH(@0)
                 	CPC  R31,R26
                 	LDI  R26,BYTE3(@0)
                 	CPC  R22,R26
                 	LDI  R26,BYTE4(@0)
                 	CPC  R23,R26
                 	.ENDM
                 
                 	.MACRO __CPD2N
                 	CPI  R26,LOW(@0)
                 	LDI  R30,HIGH(@0)
                 	CPC  R27,R30
                 	LDI  R30,BYTE3(@0)
                 	CPC  R24,R30
                 	LDI  R30,BYTE4(@0)
                 	CPC  R25,R30
                 	.ENDM
                 
                 	.MACRO __CPWRR
                 	CP   R@0,R@2
                 	CPC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __CPWRN
                 	CPI  R@0,LOW(@2)
                 	LDI  R30,HIGH(@2)
                 	CPC  R@1,R30
                 	.ENDM
                 
                 	.MACRO __ADDB1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDB2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1MN
                 	SUBI R30,LOW(-@0-(@1))
                 	SBCI R31,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW2MN
                 	SUBI R26,LOW(-@0-(@1))
                 	SBCI R27,HIGH(-@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDW1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1FN
                 	SUBI R30,LOW(-2*@0-(@1))
                 	SBCI R31,HIGH(-2*@0-(@1))
                 	SBCI R22,BYTE3(-2*@0-(@1))
                 	.ENDM
                 
                 	.MACRO __ADDD1N
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	SBCI R22,BYTE3(-@0)
                 	SBCI R23,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __ADDD2N
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	SBCI R24,BYTE3(-@0)
                 	SBCI R25,BYTE4(-@0)
                 	.ENDM
                 
                 	.MACRO __SUBD1N
                 	SUBI R30,LOW(@0)
                 	SBCI R31,HIGH(@0)
                 	SBCI R22,BYTE3(@0)
                 	SBCI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __SUBD2N
                 	SUBI R26,LOW(@0)
                 	SBCI R27,HIGH(@0)
                 	SBCI R24,BYTE3(@0)
                 	SBCI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDBMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ANDWMNN
                 	LDS  R30,@0+(@1)
                 	ANDI R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ANDI R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ANDD1N
                 	ANDI R30,LOW(@0)
                 	ANDI R31,HIGH(@0)
                 	ANDI R22,BYTE3(@0)
                 	ANDI R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ANDD2N
                 	ANDI R26,LOW(@0)
                 	ANDI R27,HIGH(@0)
                 	ANDI R24,BYTE3(@0)
                 	ANDI R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORBMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __ORWMNN
                 	LDS  R30,@0+(@1)
                 	ORI  R30,LOW(@2)
                 	STS  @0+(@1),R30
                 	LDS  R30,@0+(@1)+1
                 	ORI  R30,HIGH(@2)
                 	STS  @0+(@1)+1,R30
                 	.ENDM
                 
                 	.MACRO __ORD1N
                 	ORI  R30,LOW(@0)
                 	ORI  R31,HIGH(@0)
                 	ORI  R22,BYTE3(@0)
                 	ORI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __ORD2N
                 	ORI  R26,LOW(@0)
                 	ORI  R27,HIGH(@0)
                 	ORI  R24,BYTE3(@0)
                 	ORI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __DELAY_USB
                 	LDI  R24,LOW(@0)
                 __DELAY_USB_LOOP:
                 	DEC  R24
                 	BRNE __DELAY_USB_LOOP
                 	.ENDM
                 
                 	.MACRO __DELAY_USW
                 	LDI  R24,LOW(@0)
                 	LDI  R25,HIGH(@0)
                 __DELAY_USW_LOOP:
                 	SBIW R24,1
                 	BRNE __DELAY_USW_LOOP
                 	.ENDM
                 
                 	.MACRO __GETD1S
                 	LDD  R30,Y+@0
                 	LDD  R31,Y+@0+1
                 	LDD  R22,Y+@0+2
                 	LDD  R23,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __GETD2S
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	LDD  R24,Y+@0+2
                 	LDD  R25,Y+@0+3
                 	.ENDM
                 
                 	.MACRO __PUTD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R31
                 	STD  Y+@0+2,R22
                 	STD  Y+@0+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTD2S
                 	STD  Y+@0,R26
                 	STD  Y+@0+1,R27
                 	STD  Y+@0+2,R24
                 	STD  Y+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __PUTDZ2
                 	STD  Z+@0,R26
                 	STD  Z+@0+1,R27
                 	STD  Z+@0+2,R24
                 	STD  Z+@0+3,R25
                 	.ENDM
                 
                 	.MACRO __CLRD1S
                 	STD  Y+@0,R30
                 	STD  Y+@0+1,R30
                 	STD  Y+@0+2,R30
                 	STD  Y+@0+3,R30
                 	.ENDM
                 
                 	.MACRO __POINTB1MN
                 	LDI  R30,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW1MN
                 	LDI  R30,LOW(@0+(@1))
                 	LDI  R31,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1M
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __POINTW1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	LDI  R22,BYTE3(2*@0+(@1))
                 	LDI  R23,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTB2MN
                 	LDI  R26,LOW(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2MN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTW2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTD2FN
                 	LDI  R26,LOW(2*@0+(@1))
                 	LDI  R27,HIGH(2*@0+(@1))
                 	LDI  R24,BYTE3(2*@0+(@1))
                 	LDI  R25,BYTE4(2*@0+(@1))
                 	.ENDM
                 
                 	.MACRO __POINTBRM
                 	LDI  R@0,LOW(@1)
                 	.ENDM
                 
                 	.MACRO __POINTWRM
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __POINTBRMN
                 	LDI  R@0,LOW(@1+(@2))
                 	.ENDM
                 
                 	.MACRO __POINTWRMN
                 	LDI  R@0,LOW(@2+(@3))
                 	LDI  R@1,HIGH(@2+(@3))
                 	.ENDM
                 
                 	.MACRO __POINTWRFN
                 	LDI  R@0,LOW(@2*2+(@3))
                 	LDI  R@1,HIGH(@2*2+(@3))
                 	.ENDM
                 
                 	.MACRO __GETD1N
                 	LDI  R30,LOW(@0)
                 	LDI  R31,HIGH(@0)
                 	LDI  R22,BYTE3(@0)
                 	LDI  R23,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETD2N
                 	LDI  R26,LOW(@0)
                 	LDI  R27,HIGH(@0)
                 	LDI  R24,BYTE3(@0)
                 	LDI  R25,BYTE4(@0)
                 	.ENDM
                 
                 	.MACRO __GETB1MN
                 	LDS  R30,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETB1HMN
                 	LDS  R31,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	LDS  R22,@0+(@1)+2
                 	LDS  R23,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __GETBRMN
                 	LDS  R@0,@1+(@2)
                 	.ENDM
                 
                 	.MACRO __GETWRMN
                 	LDS  R@0,@2+(@3)
                 	LDS  R@1,@2+(@3)+1
                 	.ENDM
                 
                 	.MACRO __GETWRZ
                 	LDD  R@0,Z+@2
                 	LDD  R@1,Z+@2+1
                 	.ENDM
                 
                 	.MACRO __GETD2Z
                 	LDD  R26,Z+@0
                 	LDD  R27,Z+@0+1
                 	LDD  R24,Z+@0+2
                 	LDD  R25,Z+@0+3
                 	.ENDM
                 
                 	.MACRO __GETB2MN
                 	LDS  R26,@0+(@1)
                 	.ENDM
                 
                 	.MACRO __GETW2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	.ENDM
                 
                 	.MACRO __GETD2MN
                 	LDS  R26,@0+(@1)
                 	LDS  R27,@0+(@1)+1
                 	LDS  R24,@0+(@1)+2
                 	LDS  R25,@0+(@1)+3
                 	.ENDM
                 
                 	.MACRO __PUTB1MN
                 	STS  @0+(@1),R30
                 	.ENDM
                 
                 	.MACRO __PUTW1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1MN
                 	STS  @0+(@1),R30
                 	STS  @0+(@1)+1,R31
                 	STS  @0+(@1)+2,R22
                 	STS  @0+(@1)+3,R23
                 	.ENDM
                 
                 	.MACRO __PUTB1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRB
                 	.ENDM
                 
                 	.MACRO __PUTW1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRW
                 	.ENDM
                 
                 	.MACRO __PUTD1EN
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMWRD
                 	.ENDM
                 
                 	.MACRO __PUTBR0MN
                 	STS  @0+(@1),R0
                 	.ENDM
                 
                 	.MACRO __PUTBMRN
                 	STS  @0+(@1),R@2
                 	.ENDM
                 
                 	.MACRO __PUTWMRN
                 	STS  @0+(@1),R@2
                 	STS  @0+(@1)+1,R@3
                 	.ENDM
                 
                 	.MACRO __PUTBZR
                 	STD  Z+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWZR
                 	STD  Z+@2,R@0
                 	STD  Z+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __GETW1R
                 	MOV  R30,R@0
                 	MOV  R31,R@1
                 	.ENDM
                 
                 	.MACRO __GETW2R
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	.ENDM
                 
                 	.MACRO __GETWRN
                 	LDI  R@0,LOW(@2)
                 	LDI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __PUTW1R
                 	MOV  R@0,R30
                 	MOV  R@1,R31
                 	.ENDM
                 
                 	.MACRO __PUTW2R
                 	MOV  R@0,R26
                 	MOV  R@1,R27
                 	.ENDM
                 
                 	.MACRO __ADDWRN
                 	SUBI R@0,LOW(-@2)
                 	SBCI R@1,HIGH(-@2)
                 	.ENDM
                 
                 	.MACRO __ADDWRR
                 	ADD  R@0,R@2
                 	ADC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __SUBWRN
                 	SUBI R@0,LOW(@2)
                 	SBCI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __SUBWRR
                 	SUB  R@0,R@2
                 	SBC  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ANDWRN
                 	ANDI R@0,LOW(@2)
                 	ANDI R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ANDWRR
                 	AND  R@0,R@2
                 	AND  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __ORWRN
                 	ORI  R@0,LOW(@2)
                 	ORI  R@1,HIGH(@2)
                 	.ENDM
                 
                 	.MACRO __ORWRR
                 	OR   R@0,R@2
                 	OR   R@1,R@3
                 	.ENDM
                 
                 	.MACRO __EORWRR
                 	EOR  R@0,R@2
                 	EOR  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __GETWRS
                 	LDD  R@0,Y+@2
                 	LDD  R@1,Y+@2+1
                 	.ENDM
                 
                 	.MACRO __PUTBSR
                 	STD  Y+@1,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSR
                 	STD  Y+@2,R@0
                 	STD  Y+@2+1,R@1
                 	.ENDM
                 
                 	.MACRO __MOVEWRR
                 	MOV  R@0,R@2
                 	MOV  R@1,R@3
                 	.ENDM
                 
                 	.MACRO __INWR
                 	IN   R@0,@2
                 	IN   R@1,@2+1
                 	.ENDM
                 
                 	.MACRO __OUTWR
                 	OUT  @2+1,R@1
                 	OUT  @2,R@0
                 	.ENDM
                 
                 	.MACRO __CALL1MN
                 	LDS  R30,@0+(@1)
                 	LDS  R31,@0+(@1)+1
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL1FN
                 	LDI  R30,LOW(2*@0+(@1))
                 	LDI  R31,HIGH(2*@0+(@1))
                 	CALL __GETW1PF
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EN
                 	PUSH R26
                 	PUSH R27
                 	LDI  R26,LOW(@0+(@1))
                 	LDI  R27,HIGH(@0+(@1))
                 	CALL __EEPROMRDW
                 	POP  R27
                 	POP  R26
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __CALL2EX
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	CALL __EEPROMRDD
                 	ICALL
                 	.ENDM
                 
                 	.MACRO __GETW1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1STACK
                 	IN   R30,SPL
                 	IN   R31,SPH
                 	ADIW R30,@0+1
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __NBST
                 	BST  R@0,@1
                 	IN   R30,SREG
                 	LDI  R31,0x40
                 	EOR  R30,R31
                 	OUT  SREG,R30
                 	.ENDM
                 
                 
                 	.MACRO __PUTB1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SN
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNS
                 	LDD  R26,Y+@0
                 	LDD  R27,Y+@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMN
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1PMNS
                 	LDS  R26,@0
                 	LDS  R27,@0+1
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RN
                 	MOVW R26,R@0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RNS
                 	MOVW R26,R@0
                 	ADIW R26,@1
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RON
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	CALL __PUTDP1
                 	.ENDM
                 
                 	.MACRO __PUTB1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1RONS
                 	MOV  R26,R@0
                 	MOV  R27,R@1
                 	ADIW R26,@2
                 	CALL __PUTDP1
                 	.ENDM
                 
                 
                 	.MACRO __GETB1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R30,Z
                 	.ENDM
                 
                 	.MACRO __GETB1HSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	.ENDM
                 
                 	.MACRO __GETW1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R31,Z
                 	MOV  R30,R0
                 	.ENDM
                 
                 	.MACRO __GETD1SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R0,Z+
                 	LD   R1,Z+
                 	LD   R22,Z+
                 	LD   R23,Z
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __GETB2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R26,X
                 	.ENDM
                 
                 	.MACRO __GETW2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	.ENDM
                 
                 	.MACRO __GETD2SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R1,X+
                 	LD   R24,X+
                 	LD   R25,X
                 	MOVW R26,R0
                 	.ENDM
                 
                 	.MACRO __GETBRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	LD   R@0,Z
                 	.ENDM
                 
                 	.MACRO __GETWRSX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	LD   R@0,Z+
                 	LD   R@1,Z
                 	.ENDM
                 
                 	.MACRO __GETBRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	LD   R@0,X
                 	.ENDM
                 
                 	.MACRO __GETWRSX2
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@2)
                 	SBCI R27,HIGH(-@2)
                 	LD   R@0,X+
                 	LD   R@1,X
                 	.ENDM
                 
                 	.MACRO __LSLW8SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	LD   R31,Z
                 	CLR  R30
                 	.ENDM
                 
                 	.MACRO __PUTB1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __CLRW1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __CLRD1SX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X+,R30
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTB2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z,R26
                 	.ENDM
                 
                 	.MACRO __PUTW2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z,R27
                 	.ENDM
                 
                 	.MACRO __PUTD2SX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@0)
                 	SBCI R31,HIGH(-@0)
                 	ST   Z+,R26
                 	ST   Z+,R27
                 	ST   Z+,R24
                 	ST   Z,R25
                 	.ENDM
                 
                 	.MACRO __PUTBSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@1)
                 	SBCI R31,HIGH(-@1)
                 	ST   Z,R@0
                 	.ENDM
                 
                 	.MACRO __PUTWSRX
                 	MOVW R30,R28
                 	SUBI R30,LOW(-@2)
                 	SBCI R31,HIGH(-@2)
                 	ST   Z+,R@0
                 	ST   Z,R@1
                 	.ENDM
                 
                 	.MACRO __PUTB1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X,R30
                 	.ENDM
                 
                 	.MACRO __PUTW1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X,R31
                 	.ENDM
                 
                 	.MACRO __PUTD1SNX
                 	MOVW R26,R28
                 	SUBI R26,LOW(-@0)
                 	SBCI R27,HIGH(-@0)
                 	LD   R0,X+
                 	LD   R27,X
                 	MOV  R26,R0
                 	SUBI R26,LOW(-@1)
                 	SBCI R27,HIGH(-@1)
                 	ST   X+,R30
                 	ST   X+,R31
                 	ST   X+,R22
                 	ST   X,R23
                 	.ENDM
                 
                 	.MACRO __MULBRR
                 	MULS R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRRU
                 	MUL  R@0,R@1
                 	MOVW R30,R0
                 	.ENDM
                 
                 	.MACRO __MULBRR0
                 	MULS R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBRRU0
                 	MUL  R@0,R@1
                 	.ENDM
                 
                 	.MACRO __MULBNWRU
                 	LDI  R26,@2
                 	MUL  R26,R@0
                 	MOVW R30,R0
                 	MUL  R26,R@1
                 	ADD  R31,R0
                 	.ENDM
                 
                 ;NAME DEFINITIONS FOR GLOBAL VARIABLES ALLOCATED TO REGISTERS
                 	.DEF _a=R5
                 	.DEF _i=R4
                 
                 	.CSEG
                 	.ORG 0x00
                 
                 ;START OF CODE MARKER
                 __START_OF_CODE:
                 
                 ;INTERRUPT VECTORS
000000 940c 003b 	JMP  __RESET
000002 940c 0000 	JMP  0x00
000004 940c 0000 	JMP  0x00
000006 940c 0000 	JMP  0x00
000008 940c 0000 	JMP  0x00
00000a 940c 0000 	JMP  0x00
00000c 940c 0000 	JMP  0x00
00000e 940c 0000 	JMP  0x00
000010 940c 0000 	JMP  0x00
000012 940c 0000 	JMP  0x00
000014 940c 0000 	JMP  0x00
000016 940c 0068 	JMP  _usart_rx_isr
000018 940c 0000 	JMP  0x00
00001a 940c 0000 	JMP  0x00
00001c 940c 0000 	JMP  0x00
00001e 940c 0000 	JMP  0x00
000020 940c 0000 	JMP  0x00
000022 940c 0000 	JMP  0x00
000024 940c 0000 	JMP  0x00
000026 940c 0000 	JMP  0x00
000028 940c 0000 	JMP  0x00
                 
                 _tbl10_G100:
00002a 2710
00002b 03e8
00002c 0064
00002d 000a      	.DB  0x10,0x27,0xE8,0x3,0x64,0x0,0xA,0x0
00002e 0001      	.DB  0x1,0x0
                 _tbl16_G100:
00002f 1000
000030 0100
000031 0010
000032 0001      	.DB  0x0,0x10,0x0,0x1,0x10,0x0,0x1,0x0
                 
                 ;GLOBAL REGISTER VARIABLES INITIALIZATION
                 __REG_VARS:
C:\Users\Parsa.Ah\OneDrive\My project\RC Car\codevision\R\Debug\List\R_RC Car.asm(1128): warning: .cseg .db misalignment - padding zero byte
000033 0000      	.DB  0x0
                 
                 _0x0:
000034 6b4f
000035 4500
000036 0052      	.DB  0x4F,0x6B,0x0,0x45,0x52,0x0
                 
                 __GLOBAL_INI_TBL:
000037 0001      	.DW  0x01
000038 0004      	.DW  0x04
000039 0066      	.DW  __REG_VARS*2
                 
                 _0xFFFFFFFF:
00003a 0000      	.DW  0
                 
                 #define __GLOBAL_INI_TBL_PRESENT 1
                 
                 __RESET:
00003b 94f8      	CLI
00003c 27ee      	CLR  R30
00003d bbec      	OUT  EECR,R30
                 
                 ;INTERRUPT VECTORS ARE PLACED
                 ;AT THE START OF FLASH
00003e e0f1      	LDI  R31,1
00003f bffb      	OUT  GICR,R31
000040 bfeb      	OUT  GICR,R30
000041 bfe5      	OUT  MCUCR,R30
                 
                 ;CLEAR R2-R14
000042 e08d      	LDI  R24,(14-2)+1
000043 e0a2      	LDI  R26,2
000044 27bb      	CLR  R27
                 __CLEAR_REG:
000045 93ed      	ST   X+,R30
000046 958a      	DEC  R24
000047 f7e9      	BRNE __CLEAR_REG
                 
                 ;CLEAR SRAM
000048 e080      	LDI  R24,LOW(__CLEAR_SRAM_SIZE)
000049 e094      	LDI  R25,HIGH(__CLEAR_SRAM_SIZE)
00004a e6a0      	LDI  R26,__SRAM_START
                 __CLEAR_SRAM:
00004b 93ed      	ST   X+,R30
00004c 9701      	SBIW R24,1
00004d f7e9      	BRNE __CLEAR_SRAM
                 
                 ;GLOBAL VARIABLES INITIALIZATION
00004e e6ee      	LDI  R30,LOW(__GLOBAL_INI_TBL*2)
00004f e0f0      	LDI  R31,HIGH(__GLOBAL_INI_TBL*2)
                 __GLOBAL_INI_NEXT:
000050 9185      	LPM  R24,Z+
000051 9195      	LPM  R25,Z+
000052 9700      	SBIW R24,0
000053 f061      	BREQ __GLOBAL_INI_END
000054 91a5      	LPM  R26,Z+
000055 91b5      	LPM  R27,Z+
000056 9005      	LPM  R0,Z+
000057 9015      	LPM  R1,Z+
000058 01bf      	MOVW R22,R30
000059 01f0      	MOVW R30,R0
                 __GLOBAL_INI_LOOP:
00005a 9005      	LPM  R0,Z+
00005b 920d      	ST   X+,R0
00005c 9701      	SBIW R24,1
00005d f7e1      	BRNE __GLOBAL_INI_LOOP
00005e 01fb      	MOVW R30,R22
00005f cff0      	RJMP __GLOBAL_INI_NEXT
                 __GLOBAL_INI_END:
                 
                 ;HARDWARE STACK POINTER INITIALIZATION
000060 e5ef      	LDI  R30,LOW(__SRAM_END-__HEAP_SIZE)
000061 bfed      	OUT  SPL,R30
000062 e0e4      	LDI  R30,HIGH(__SRAM_END-__HEAP_SIZE)
000063 bfee      	OUT  SPH,R30
                 
                 ;DATA STACK POINTER INITIALIZATION
000064 e6c0      	LDI  R28,LOW(__SRAM_START+__DSTACK_SIZE)
000065 e0d1      	LDI  R29,HIGH(__SRAM_START+__DSTACK_SIZE)
                 
000066 940c 007b 	JMP  _main
                 
                 	.ESEG
                 	.ORG 0
                 
                 	.DSEG
                 	.ORG 0x160
                 
                 	.CSEG
                 ;#include <mega16a.h>
                 	#ifndef __SLEEP_DEFINED__
                 	#define __SLEEP_DEFINED__
                 	.EQU __se_bit=0x40
                 	.EQU __sm_mask=0xB0
                 	.EQU __sm_powerdown=0x20
                 	.EQU __sm_powersave=0x30
                 	.EQU __sm_standby=0xA0
                 	.EQU __sm_ext_standby=0xB0
                 	.EQU __sm_adc_noise_red=0x10
                 	.SET power_ctrl_reg=mcucr
                 	#endif
                 ;#include <delay.h>
                 ;
                 ;// Declare your global variables here
                 ;
                 ;unsigned char a,i=0;
                 ;char rx_data[20];
                 ;
                 ;// USART Receiver interrupt service routine
                 ;interrupt [USART_RXC] void usart_rx_isr(void)
                 ; 0000 000B {
                 
                 	.CSEG
                 _usart_rx_isr:
                 ; .FSTART _usart_rx_isr
000068 93aa      	ST   -Y,R26
000069 93ba      	ST   -Y,R27
00006a 93ea      	ST   -Y,R30
00006b b7ef      	IN   R30,SREG
00006c 93ea      	ST   -Y,R30
                 ; 0000 000C  a=rx_data[i]=UDR;
00006d 2da4      	MOV  R26,R4
00006e e0b0      	LDI  R27,0
00006f 5aa0      	SUBI R26,LOW(-_rx_data)
000070 4fbe      	SBCI R27,HIGH(-_rx_data)
000071 b1ec      	IN   R30,0xC
000072 93ec      	ST   X,R30
000073 2e5e      	MOV  R5,R30
                 ; 0000 000D  i++;
000074 9443      	INC  R4
                 ; 0000 000E }
000075 91e9      	LD   R30,Y+
000076 bfef      	OUT  SREG,R30
000077 91e9      	LD   R30,Y+
000078 91b9      	LD   R27,Y+
000079 91a9      	LD   R26,Y+
00007a 9518      	RETI
                 ; .FEND
                 ;
                 ;
                 ;// Standard Input/Output functions
                 ;#include <stdio.h>
                 ;
                 ;void main(void)
                 ; 0000 0015 {
                 _main:
                 ; .FSTART _main
                 ; 0000 0016 // Declare your local variables here
                 ; 0000 0017 
                 ; 0000 0018 // Input/Output Ports initialization
                 ; 0000 0019 // Port A initialization
                 ; 0000 001A // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 001B DDRA=(1<<DDA7) | (1<<DDA6) | (1<<DDA5) | (1<<DDA4) | (1<<DDA3) | (1<<DDA2) | (1<<DDA1) | (1<<DDA0);
00007b efef      	LDI  R30,LOW(255)
00007c bbea      	OUT  0x1A,R30
                 ; 0000 001C // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 001D PORTA=(0<<PORTA7) | (0<<PORTA6) | (0<<PORTA5) | (0<<PORTA4) | (0<<PORTA3) | (0<<PORTA2) | (0<<PORTA1) | (0<<PORTA0);
00007d e0e0      	LDI  R30,LOW(0)
00007e bbeb      	OUT  0x1B,R30
                 ; 0000 001E 
                 ; 0000 001F // Port B initialization
                 ; 0000 0020 // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 0021 DDRB=(0<<DDB7) | (0<<DDB6) | (0<<DDB5) | (0<<DDB4) | (0<<DDB3) | (0<<DDB2) | (0<<DDB1) | (0<<DDB0);
00007f bbe7      	OUT  0x17,R30
                 ; 0000 0022 // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 0023 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
000080 bbe8      	OUT  0x18,R30
                 ; 0000 0024 
                 ; 0000 0025 // Port C initialization
                 ; 0000 0026 // Function: Bit7=Out Bit6=Out Bit5=Out Bit4=Out Bit3=Out Bit2=Out Bit1=Out Bit0=Out
                 ; 0000 0027 DDRC=(1<<DDC7) | (1<<DDC6) | (1<<DDC5) | (1<<DDC4) | (1<<DDC3) | (1<<DDC2) | (1<<DDC1) | (1<<DDC0);
000081 efef      	LDI  R30,LOW(255)
000082 bbe4      	OUT  0x14,R30
                 ; 0000 0028 // State: Bit7=0 Bit6=0 Bit5=0 Bit4=0 Bit3=0 Bit2=0 Bit1=0 Bit0=0
                 ; 0000 0029 PORTC=(0<<PORTC7) | (0<<PORTC6) | (0<<PORTC5) | (0<<PORTC4) | (0<<PORTC3) | (0<<PORTC2) | (0<<PORTC1) | (0<<PORTC0);
000083 e0e0      	LDI  R30,LOW(0)
000084 bbe5      	OUT  0x15,R30
                 ; 0000 002A 
                 ; 0000 002B // Port D initialization
                 ; 0000 002C // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=In Bit1=In Bit0=In
                 ; 0000 002D DDRD=(0<<DDD7) | (0<<DDD6) | (0<<DDD5) | (0<<DDD4) | (0<<DDD3) | (0<<DDD2) | (0<<DDD1) | (0<<DDD0);
000085 bbe1      	OUT  0x11,R30
                 ; 0000 002E // State: Bit7=P Bit6=T Bit5=T Bit4=T Bit3=T Bit2=T Bit1=T Bit0=T
                 ; 0000 002F PORTD=(1<<PORTD7) | (0<<PORTD6) | (0<<PORTD5) | (0<<PORTD4) | (0<<PORTD3) | (0<<PORTD2) | (0<<PORTD1) | (0<<PORTD0);
000086 e8e0      	LDI  R30,LOW(128)
000087 bbe2      	OUT  0x12,R30
                 ; 0000 0030 
                 ; 0000 0031 
                 ; 0000 0032 // USART initialization
                 ; 0000 0033 // Communication Parameters: 8 Data, 1 Stop, No Parity
                 ; 0000 0034 // USART Receiver: On
                 ; 0000 0035 // USART Transmitter: On
                 ; 0000 0036 // USART Mode: Asynchronous
                 ; 0000 0037 // USART Baud Rate: 9600
                 ; 0000 0038 UCSRA=(0<<RXC) | (0<<TXC) | (0<<UDRE) | (0<<FE) | (0<<DOR) | (0<<UPE) | (0<<U2X) | (0<<MPCM);
000088 e0e0      	LDI  R30,LOW(0)
000089 b9eb      	OUT  0xB,R30
                 ; 0000 0039 UCSRB=(1<<RXCIE) | (0<<TXCIE) | (0<<UDRIE) | (1<<RXEN) | (1<<TXEN) | (0<<UCSZ2) | (0<<RXB8) | (0<<TXB8);
00008a e9e8      	LDI  R30,LOW(152)
00008b b9ea      	OUT  0xA,R30
                 ; 0000 003A UCSRC=(1<<URSEL) | (0<<UMSEL) | (0<<UPM1) | (0<<UPM0) | (0<<USBS) | (1<<UCSZ1) | (1<<UCSZ0) | (0<<UCPOL);
00008c e8e6      	LDI  R30,LOW(134)
00008d bde0      	OUT  0x20,R30
                 ; 0000 003B UBRRH=0x00;
00008e e0e0      	LDI  R30,LOW(0)
00008f bde0      	OUT  0x20,R30
                 ; 0000 003C UBRRL=0x33;
000090 e3e3      	LDI  R30,LOW(51)
000091 b9e9      	OUT  0x9,R30
                 ; 0000 003D 
                 ; 0000 003E i=0;
000092 2444      	CLR  R4
                 ; 0000 003F // Global enable interrupts
                 ; 0000 0040 #asm("sei")
000093 9478      	sei
                 ; 0000 0041 PORTA.5=1;
000094 9add      	SBI  0x1B,5
                 ; 0000 0042 PORTA.0=1;
000095 9ad8      	SBI  0x1B,0
                 ; 0000 0043 PORTA.2=1;
000096 9ada      	SBI  0x1B,2
                 ; 0000 0044 delay_ms(600);
000097 e5a8      	LDI  R26,LOW(600)
000098 e0b2      	LDI  R27,HIGH(600)
000099 940e 03f6 	CALL SUBOPT_0x0
                 ; 0000 0045 PORTA.5=0;
                 ; 0000 0046 delay_ms(200);
                 ; 0000 0047 PORTA.5=1;
                 ; 0000 0048 delay_ms(200);
00009b 940e 03f6 	CALL SUBOPT_0x0
                 ; 0000 0049 PORTA.5=0;
                 ; 0000 004A delay_ms(200);
                 ; 0000 004B PORTA.5=1;
                 ; 0000 004C delay_ms(200);
00009d 940e 03f6 	CALL SUBOPT_0x0
                 ; 0000 004D PORTA.5=0;
                 ; 0000 004E delay_ms(200);
                 ; 0000 004F PORTA.5=1;
                 ; 0000 0050 delay_ms(200);
00009f 940e 0405 	CALL _delay_ms
                 ; 0000 0051 PORTA.5=0;
0000a1 98dd      	CBI  0x1B,5
                 ; 0000 0052 delay_ms(200);
0000a2 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 0053 PORTC.0=1;
0000a4 9aa8      	SBI  0x15,0
                 ; 0000 0054 delay_ms(200);
0000a5 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 0055 PORTC.0=0;
0000a7 98a8      	CBI  0x15,0
                 ; 0000 0056 delay_ms(200);
0000a8 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 0057 PORTC.1=1;
0000aa 9aa9      	SBI  0x15,1
                 ; 0000 0058 delay_ms(200);
0000ab 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 0059 PORTC.1=0;
0000ad 98a9      	CBI  0x15,1
                 ; 0000 005A delay_ms(200);
0000ae 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 005B PORTC.2=1;
0000b0 9aaa      	SBI  0x15,2
                 ; 0000 005C delay_ms(200);
0000b1 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 005D PORTC.2=0;
0000b3 98aa      	CBI  0x15,2
                 ; 0000 005E delay_ms(200);
0000b4 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 005F PORTC.0=1;
0000b6 9aa8      	SBI  0x15,0
                 ; 0000 0060 PORTC.1=1;
0000b7 9aa9      	SBI  0x15,1
                 ; 0000 0061 PORTC.2=1;
0000b8 9aaa      	SBI  0x15,2
                 ; 0000 0062 delay_ms(200);
0000b9 940e 0401 	CALL SUBOPT_0x1
                 ; 0000 0063 PORTC.0=0;
0000bb 98a8      	CBI  0x15,0
                 ; 0000 0064 PORTC.1=0;
0000bc 98a9      	CBI  0x15,1
                 ; 0000 0065 PORTC.2=0;
0000bd 98aa      	CBI  0x15,2
                 ; 0000 0066 
                 ; 0000 0067  while (1)
                 _0x2F:
                 ; 0000 0068  {
                 ; 0000 0069   if(PIND.7==0)
0000be 9987      	SBIC 0x10,7
0000bf c002      	RJMP _0x32
                 ; 0000 006A   {
                 ; 0000 006B    PORTA.1=1;
0000c0 9ad9      	SBI  0x1B,1
                 ; 0000 006C   }
                 ; 0000 006D   else
0000c1 c001      	RJMP _0x35
                 _0x32:
                 ; 0000 006E   {
                 ; 0000 006F    PORTA.1=0;
0000c2 98d9      	CBI  0x1B,1
                 ; 0000 0070   }
                 _0x35:
                 ; 0000 0071 
                 ; 0000 0072   if(a==']')
0000c3 e5ed      	LDI  R30,LOW(93)
0000c4 15e5      	CP   R30,R5
0000c5 f009      	BREQ PC+2
0000c6 c311      	RJMP _0x38
                 ; 0000 0073   {
                 ; 0000 0074    putsf("Ok");
                +
0000c7 e6a8     +LDI R26 , LOW ( 2 * _0x0 + ( 0 ) )
0000c8 e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 0 ) )
                 	__POINTW2FN _0x0,0
0000c9 940e 03e1 	CALL _putsf
                 ; 0000 0075    if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='0'&&rx_data[6]== ...
0000cb 91a0 0160 	LDS  R26,_rx_data
0000cd 35a0      	CPI  R26,LOW(0x50)
0000ce f4e1      	BRNE _0x3A
                +
0000cf 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0000d1 34a9      	CPI  R26,LOW(0x49)
0000d2 f4c1      	BRNE _0x3A
                +
0000d3 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0000d5 34ae      	CPI  R26,LOW(0x4E)
0000d6 f4a1      	BRNE _0x3A
                +
0000d7 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0000d9 34a1      	CPI  R26,LOW(0x41)
0000da f481      	BRNE _0x3A
                +
0000db 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0000dd 32ae      	CPI  R26,LOW(0x2E)
0000de f461      	BRNE _0x3A
                +
0000df 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0000e1 33a0      	CPI  R26,LOW(0x30)
0000e2 f441      	BRNE _0x3A
                +
0000e3 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0000e5 33ad      	CPI  R26,LOW(0x3D)
0000e6 f421      	BRNE _0x3A
                +
0000e7 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0000e9 33a0      	CPI  R26,LOW(0x30)
0000ea f009      	BREQ _0x3B
                 _0x3A:
0000eb c002      	RJMP _0x39
                 _0x3B:
                 ; 0000 0076    {
                 ; 0000 0077     PORTA.0=1;
0000ec 9ad8      	SBI  0x1B,0
                 ; 0000 0078     i=0;a=0;
0000ed c2e8      	RJMP _0xBA
                 ; 0000 0079    }
                 ; 0000 007A    else
                 _0x39:
                 ; 0000 007B    {
                 ; 0000 007C     if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='1'&&rx_data[6]= ...
0000ee 91a0 0160 	LDS  R26,_rx_data
0000f0 35a0      	CPI  R26,LOW(0x50)
0000f1 f4e1      	BRNE _0x40
                +
0000f2 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0000f4 34a9      	CPI  R26,LOW(0x49)
0000f5 f4c1      	BRNE _0x40
                +
0000f6 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0000f8 34ae      	CPI  R26,LOW(0x4E)
0000f9 f4a1      	BRNE _0x40
                +
0000fa 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0000fc 34a1      	CPI  R26,LOW(0x41)
0000fd f481      	BRNE _0x40
                +
0000fe 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000100 32ae      	CPI  R26,LOW(0x2E)
000101 f461      	BRNE _0x40
                +
000102 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000104 33a1      	CPI  R26,LOW(0x31)
000105 f441      	BRNE _0x40
                +
000106 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000108 33ad      	CPI  R26,LOW(0x3D)
000109 f421      	BRNE _0x40
                +
00010a 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
00010c 33a0      	CPI  R26,LOW(0x30)
00010d f009      	BREQ _0x41
                 _0x40:
00010e c001      	RJMP _0x3F
                 _0x41:
                 ; 0000 007D     {
                 ; 0000 007E      //PORTA.1=1;
                 ; 0000 007F      i=0;a=0;
00010f c2c6      	RJMP _0xBA
                 ; 0000 0080     }
                 ; 0000 0081     else
                 _0x3F:
                 ; 0000 0082     {
                 ; 0000 0083      if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='2'&&rx_data[6] ...
000110 91a0 0160 	LDS  R26,_rx_data
000112 35a0      	CPI  R26,LOW(0x50)
000113 f4e1      	BRNE _0x44
                +
000114 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000116 34a9      	CPI  R26,LOW(0x49)
000117 f4c1      	BRNE _0x44
                +
000118 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
00011a 34ae      	CPI  R26,LOW(0x4E)
00011b f4a1      	BRNE _0x44
                +
00011c 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
00011e 34a1      	CPI  R26,LOW(0x41)
00011f f481      	BRNE _0x44
                +
000120 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000122 32ae      	CPI  R26,LOW(0x2E)
000123 f461      	BRNE _0x44
                +
000124 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000126 33a2      	CPI  R26,LOW(0x32)
000127 f441      	BRNE _0x44
                +
000128 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
00012a 33ad      	CPI  R26,LOW(0x3D)
00012b f421      	BRNE _0x44
                +
00012c 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
00012e 33a0      	CPI  R26,LOW(0x30)
00012f f009      	BREQ _0x45
                 _0x44:
000130 c002      	RJMP _0x43
                 _0x45:
                 ; 0000 0084      {
                 ; 0000 0085       PORTA.2=1;
000131 9ada      	SBI  0x1B,2
                 ; 0000 0086       i=0;a=0;
000132 c2a3      	RJMP _0xBA
                 ; 0000 0087      }
                 ; 0000 0088      else
                 _0x43:
                 ; 0000 0089      {
                 ; 0000 008A       if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='3'&&rx_data[6 ...
000133 91a0 0160 	LDS  R26,_rx_data
000135 35a0      	CPI  R26,LOW(0x50)
000136 f4e1      	BRNE _0x4A
                +
000137 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000139 34a9      	CPI  R26,LOW(0x49)
00013a f4c1      	BRNE _0x4A
                +
00013b 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
00013d 34ae      	CPI  R26,LOW(0x4E)
00013e f4a1      	BRNE _0x4A
                +
00013f 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000141 34a1      	CPI  R26,LOW(0x41)
000142 f481      	BRNE _0x4A
                +
000143 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000145 32ae      	CPI  R26,LOW(0x2E)
000146 f461      	BRNE _0x4A
                +
000147 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000149 33a3      	CPI  R26,LOW(0x33)
00014a f441      	BRNE _0x4A
                +
00014b 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
00014d 33ad      	CPI  R26,LOW(0x3D)
00014e f421      	BRNE _0x4A
                +
00014f 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000151 33a0      	CPI  R26,LOW(0x30)
000152 f009      	BREQ _0x4B
                 _0x4A:
000153 c002      	RJMP _0x49
                 _0x4B:
                 ; 0000 008B       {
                 ; 0000 008C        PORTA.3=1;
000154 9adb      	SBI  0x1B,3
                 ; 0000 008D        i=0;a=0;
000155 c280      	RJMP _0xBA
                 ; 0000 008E       }
                 ; 0000 008F       else
                 _0x49:
                 ; 0000 0090       {
                 ; 0000 0091        if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='4'&&rx_data[ ...
000156 91a0 0160 	LDS  R26,_rx_data
000158 35a0      	CPI  R26,LOW(0x50)
000159 f4e1      	BRNE _0x50
                +
00015a 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
00015c 34a9      	CPI  R26,LOW(0x49)
00015d f4c1      	BRNE _0x50
                +
00015e 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000160 34ae      	CPI  R26,LOW(0x4E)
000161 f4a1      	BRNE _0x50
                +
000162 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000164 34a1      	CPI  R26,LOW(0x41)
000165 f481      	BRNE _0x50
                +
000166 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000168 32ae      	CPI  R26,LOW(0x2E)
000169 f461      	BRNE _0x50
                +
00016a 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
00016c 33a4      	CPI  R26,LOW(0x34)
00016d f441      	BRNE _0x50
                +
00016e 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000170 33ad      	CPI  R26,LOW(0x3D)
000171 f421      	BRNE _0x50
                +
000172 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000174 33a0      	CPI  R26,LOW(0x30)
000175 f009      	BREQ _0x51
                 _0x50:
000176 c002      	RJMP _0x4F
                 _0x51:
                 ; 0000 0092        {
                 ; 0000 0093         PORTA.4=1;
000177 9adc      	SBI  0x1B,4
                 ; 0000 0094         i=0;a=0;
000178 c25d      	RJMP _0xBA
                 ; 0000 0095        }
                 ; 0000 0096        else
                 _0x4F:
                 ; 0000 0097        {
                 ; 0000 0098         if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='5'&&rx_data ...
000179 91a0 0160 	LDS  R26,_rx_data
00017b 35a0      	CPI  R26,LOW(0x50)
00017c f4e1      	BRNE _0x56
                +
00017d 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
00017f 34a9      	CPI  R26,LOW(0x49)
000180 f4c1      	BRNE _0x56
                +
000181 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000183 34ae      	CPI  R26,LOW(0x4E)
000184 f4a1      	BRNE _0x56
                +
000185 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000187 34a1      	CPI  R26,LOW(0x41)
000188 f481      	BRNE _0x56
                +
000189 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
00018b 32ae      	CPI  R26,LOW(0x2E)
00018c f461      	BRNE _0x56
                +
00018d 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
00018f 33a5      	CPI  R26,LOW(0x35)
000190 f441      	BRNE _0x56
                +
000191 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000193 33ad      	CPI  R26,LOW(0x3D)
000194 f421      	BRNE _0x56
                +
000195 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000197 33a0      	CPI  R26,LOW(0x30)
000198 f009      	BREQ _0x57
                 _0x56:
000199 c002      	RJMP _0x55
                 _0x57:
                 ; 0000 0099         {
                 ; 0000 009A          PORTA.5=1;
00019a 9add      	SBI  0x1B,5
                 ; 0000 009B          i=0;a=0;
00019b c23a      	RJMP _0xBA
                 ; 0000 009C         }
                 ; 0000 009D         else
                 _0x55:
                 ; 0000 009E         {
                 ; 0000 009F          if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='6'&&rx_dat ...
00019c 91a0 0160 	LDS  R26,_rx_data
00019e 35a0      	CPI  R26,LOW(0x50)
00019f f4e1      	BRNE _0x5C
                +
0001a0 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0001a2 34a9      	CPI  R26,LOW(0x49)
0001a3 f4c1      	BRNE _0x5C
                +
0001a4 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0001a6 34ae      	CPI  R26,LOW(0x4E)
0001a7 f4a1      	BRNE _0x5C
                +
0001a8 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0001aa 34a1      	CPI  R26,LOW(0x41)
0001ab f481      	BRNE _0x5C
                +
0001ac 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0001ae 32ae      	CPI  R26,LOW(0x2E)
0001af f461      	BRNE _0x5C
                +
0001b0 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0001b2 33a6      	CPI  R26,LOW(0x36)
0001b3 f441      	BRNE _0x5C
                +
0001b4 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0001b6 33ad      	CPI  R26,LOW(0x3D)
0001b7 f421      	BRNE _0x5C
                +
0001b8 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0001ba 33a0      	CPI  R26,LOW(0x30)
0001bb f009      	BREQ _0x5D
                 _0x5C:
0001bc c002      	RJMP _0x5B
                 _0x5D:
                 ; 0000 00A0          {
                 ; 0000 00A1           PORTA.6=1;
0001bd 9ade      	SBI  0x1B,6
                 ; 0000 00A2           i=0;a=0;
0001be c217      	RJMP _0xBA
                 ; 0000 00A3          }
                 ; 0000 00A4          else
                 _0x5B:
                 ; 0000 00A5          {
                 ; 0000 00A6           if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='7'&&rx_da ...
0001bf 91a0 0160 	LDS  R26,_rx_data
0001c1 35a0      	CPI  R26,LOW(0x50)
0001c2 f4e1      	BRNE _0x62
                +
0001c3 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0001c5 34a9      	CPI  R26,LOW(0x49)
0001c6 f4c1      	BRNE _0x62
                +
0001c7 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0001c9 34ae      	CPI  R26,LOW(0x4E)
0001ca f4a1      	BRNE _0x62
                +
0001cb 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0001cd 34a1      	CPI  R26,LOW(0x41)
0001ce f481      	BRNE _0x62
                +
0001cf 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0001d1 32ae      	CPI  R26,LOW(0x2E)
0001d2 f461      	BRNE _0x62
                +
0001d3 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0001d5 33a7      	CPI  R26,LOW(0x37)
0001d6 f441      	BRNE _0x62
                +
0001d7 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0001d9 33ad      	CPI  R26,LOW(0x3D)
0001da f421      	BRNE _0x62
                +
0001db 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0001dd 33a0      	CPI  R26,LOW(0x30)
0001de f009      	BREQ _0x63
                 _0x62:
0001df c002      	RJMP _0x61
                 _0x63:
                 ; 0000 00A7           {
                 ; 0000 00A8            PORTA.7=1;
0001e0 9adf      	SBI  0x1B,7
                 ; 0000 00A9            i=0;a=0;
0001e1 c1f4      	RJMP _0xBA
                 ; 0000 00AA           }
                 ; 0000 00AB           else
                 _0x61:
                 ; 0000 00AC           {
                 ; 0000 00AD            if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='0'&&rx_d ...
0001e2 91a0 0160 	LDS  R26,_rx_data
0001e4 35a0      	CPI  R26,LOW(0x50)
0001e5 f4e1      	BRNE _0x68
                +
0001e6 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0001e8 34a9      	CPI  R26,LOW(0x49)
0001e9 f4c1      	BRNE _0x68
                +
0001ea 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0001ec 34ae      	CPI  R26,LOW(0x4E)
0001ed f4a1      	BRNE _0x68
                +
0001ee 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0001f0 34a1      	CPI  R26,LOW(0x41)
0001f1 f481      	BRNE _0x68
                +
0001f2 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0001f4 32ae      	CPI  R26,LOW(0x2E)
0001f5 f461      	BRNE _0x68
                +
0001f6 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0001f8 33a0      	CPI  R26,LOW(0x30)
0001f9 f441      	BRNE _0x68
                +
0001fa 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0001fc 33ad      	CPI  R26,LOW(0x3D)
0001fd f421      	BRNE _0x68
                +
0001fe 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000200 33a1      	CPI  R26,LOW(0x31)
000201 f009      	BREQ _0x69
                 _0x68:
000202 c002      	RJMP _0x67
                 _0x69:
                 ; 0000 00AE            {
                 ; 0000 00AF             PORTA.0=0;
000203 98d8      	CBI  0x1B,0
                 ; 0000 00B0             i=0;a=0;
000204 c1d1      	RJMP _0xBA
                 ; 0000 00B1            }
                 ; 0000 00B2            else
                 _0x67:
                 ; 0000 00B3            {
                 ; 0000 00B4             if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='1'&&rx_ ...
000205 91a0 0160 	LDS  R26,_rx_data
000207 35a0      	CPI  R26,LOW(0x50)
000208 f4e1      	BRNE _0x6E
                +
000209 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
00020b 34a9      	CPI  R26,LOW(0x49)
00020c f4c1      	BRNE _0x6E
                +
00020d 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
00020f 34ae      	CPI  R26,LOW(0x4E)
000210 f4a1      	BRNE _0x6E
                +
000211 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000213 34a1      	CPI  R26,LOW(0x41)
000214 f481      	BRNE _0x6E
                +
000215 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000217 32ae      	CPI  R26,LOW(0x2E)
000218 f461      	BRNE _0x6E
                +
000219 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
00021b 33a1      	CPI  R26,LOW(0x31)
00021c f441      	BRNE _0x6E
                +
00021d 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
00021f 33ad      	CPI  R26,LOW(0x3D)
000220 f421      	BRNE _0x6E
                +
000221 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000223 33a1      	CPI  R26,LOW(0x31)
000224 f009      	BREQ _0x6F
                 _0x6E:
000225 c001      	RJMP _0x6D
                 _0x6F:
                 ; 0000 00B5             {
                 ; 0000 00B6              //PORTA.1=0;
                 ; 0000 00B7              i=0;a=0;
000226 c1af      	RJMP _0xBA
                 ; 0000 00B8             }
                 ; 0000 00B9             else
                 _0x6D:
                 ; 0000 00BA             {
                 ; 0000 00BB              if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='2'&&rx ...
000227 91a0 0160 	LDS  R26,_rx_data
000229 35a0      	CPI  R26,LOW(0x50)
00022a f4e1      	BRNE _0x72
                +
00022b 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
00022d 34a9      	CPI  R26,LOW(0x49)
00022e f4c1      	BRNE _0x72
                +
00022f 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000231 34ae      	CPI  R26,LOW(0x4E)
000232 f4a1      	BRNE _0x72
                +
000233 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000235 34a1      	CPI  R26,LOW(0x41)
000236 f481      	BRNE _0x72
                +
000237 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000239 32ae      	CPI  R26,LOW(0x2E)
00023a f461      	BRNE _0x72
                +
00023b 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
00023d 33a2      	CPI  R26,LOW(0x32)
00023e f441      	BRNE _0x72
                +
00023f 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000241 33ad      	CPI  R26,LOW(0x3D)
000242 f421      	BRNE _0x72
                +
000243 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000245 33a1      	CPI  R26,LOW(0x31)
000246 f009      	BREQ _0x73
                 _0x72:
000247 c002      	RJMP _0x71
                 _0x73:
                 ; 0000 00BC              {
                 ; 0000 00BD               PORTA.2=0;
000248 98da      	CBI  0x1B,2
                 ; 0000 00BE               i=0;a=0;
000249 c18c      	RJMP _0xBA
                 ; 0000 00BF              }
                 ; 0000 00C0              else
                 _0x71:
                 ; 0000 00C1              {
                 ; 0000 00C2               if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='3'&&r ...
00024a 91a0 0160 	LDS  R26,_rx_data
00024c 35a0      	CPI  R26,LOW(0x50)
00024d f4e1      	BRNE _0x78
                +
00024e 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000250 34a9      	CPI  R26,LOW(0x49)
000251 f4c1      	BRNE _0x78
                +
000252 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000254 34ae      	CPI  R26,LOW(0x4E)
000255 f4a1      	BRNE _0x78
                +
000256 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000258 34a1      	CPI  R26,LOW(0x41)
000259 f481      	BRNE _0x78
                +
00025a 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
00025c 32ae      	CPI  R26,LOW(0x2E)
00025d f461      	BRNE _0x78
                +
00025e 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000260 33a3      	CPI  R26,LOW(0x33)
000261 f441      	BRNE _0x78
                +
000262 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000264 33ad      	CPI  R26,LOW(0x3D)
000265 f421      	BRNE _0x78
                +
000266 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000268 33a1      	CPI  R26,LOW(0x31)
000269 f009      	BREQ _0x79
                 _0x78:
00026a c002      	RJMP _0x77
                 _0x79:
                 ; 0000 00C3               {
                 ; 0000 00C4                PORTA.3=0;
00026b 98db      	CBI  0x1B,3
                 ; 0000 00C5                i=0;a=0;
00026c c169      	RJMP _0xBA
                 ; 0000 00C6               }
                 ; 0000 00C7               else
                 _0x77:
                 ; 0000 00C8               {
                 ; 0000 00C9                if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='4'&& ...
00026d 91a0 0160 	LDS  R26,_rx_data
00026f 35a0      	CPI  R26,LOW(0x50)
000270 f4e1      	BRNE _0x7E
                +
000271 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000273 34a9      	CPI  R26,LOW(0x49)
000274 f4c1      	BRNE _0x7E
                +
000275 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000277 34ae      	CPI  R26,LOW(0x4E)
000278 f4a1      	BRNE _0x7E
                +
000279 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
00027b 34a1      	CPI  R26,LOW(0x41)
00027c f481      	BRNE _0x7E
                +
00027d 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
00027f 32ae      	CPI  R26,LOW(0x2E)
000280 f461      	BRNE _0x7E
                +
000281 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000283 33a4      	CPI  R26,LOW(0x34)
000284 f441      	BRNE _0x7E
                +
000285 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000287 33ad      	CPI  R26,LOW(0x3D)
000288 f421      	BRNE _0x7E
                +
000289 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
00028b 33a1      	CPI  R26,LOW(0x31)
00028c f009      	BREQ _0x7F
                 _0x7E:
00028d c002      	RJMP _0x7D
                 _0x7F:
                 ; 0000 00CA                {
                 ; 0000 00CB                 PORTA.4=0;
00028e 98dc      	CBI  0x1B,4
                 ; 0000 00CC                 i=0;a=0;
00028f c146      	RJMP _0xBA
                 ; 0000 00CD                }
                 ; 0000 00CE                else
                 _0x7D:
                 ; 0000 00CF                {
                 ; 0000 00D0                 if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='5'& ...
000290 91a0 0160 	LDS  R26,_rx_data
000292 35a0      	CPI  R26,LOW(0x50)
000293 f4e1      	BRNE _0x84
                +
000294 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000296 34a9      	CPI  R26,LOW(0x49)
000297 f4c1      	BRNE _0x84
                +
000298 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
00029a 34ae      	CPI  R26,LOW(0x4E)
00029b f4a1      	BRNE _0x84
                +
00029c 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
00029e 34a1      	CPI  R26,LOW(0x41)
00029f f481      	BRNE _0x84
                +
0002a0 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0002a2 32ae      	CPI  R26,LOW(0x2E)
0002a3 f461      	BRNE _0x84
                +
0002a4 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0002a6 33a5      	CPI  R26,LOW(0x35)
0002a7 f441      	BRNE _0x84
                +
0002a8 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0002aa 33ad      	CPI  R26,LOW(0x3D)
0002ab f421      	BRNE _0x84
                +
0002ac 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0002ae 33a1      	CPI  R26,LOW(0x31)
0002af f009      	BREQ _0x85
                 _0x84:
0002b0 c002      	RJMP _0x83
                 _0x85:
                 ; 0000 00D1                 {
                 ; 0000 00D2                  PORTA.5=0;
0002b1 98dd      	CBI  0x1B,5
                 ; 0000 00D3                  i=0;a=0;
0002b2 c123      	RJMP _0xBA
                 ; 0000 00D4                 }
                 ; 0000 00D5                 else
                 _0x83:
                 ; 0000 00D6                 {
                 ; 0000 00D7                  if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='6' ...
0002b3 91a0 0160 	LDS  R26,_rx_data
0002b5 35a0      	CPI  R26,LOW(0x50)
0002b6 f4e1      	BRNE _0x8A
                +
0002b7 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0002b9 34a9      	CPI  R26,LOW(0x49)
0002ba f4c1      	BRNE _0x8A
                +
0002bb 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0002bd 34ae      	CPI  R26,LOW(0x4E)
0002be f4a1      	BRNE _0x8A
                +
0002bf 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0002c1 34a1      	CPI  R26,LOW(0x41)
0002c2 f481      	BRNE _0x8A
                +
0002c3 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0002c5 32ae      	CPI  R26,LOW(0x2E)
0002c6 f461      	BRNE _0x8A
                +
0002c7 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0002c9 33a6      	CPI  R26,LOW(0x36)
0002ca f441      	BRNE _0x8A
                +
0002cb 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0002cd 33ad      	CPI  R26,LOW(0x3D)
0002ce f421      	BRNE _0x8A
                +
0002cf 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0002d1 33a1      	CPI  R26,LOW(0x31)
0002d2 f009      	BREQ _0x8B
                 _0x8A:
0002d3 c002      	RJMP _0x89
                 _0x8B:
                 ; 0000 00D8                 {
                 ; 0000 00D9                  PORTA.6=0;
0002d4 98de      	CBI  0x1B,6
                 ; 0000 00DA                  i=0;a=0;
0002d5 c100      	RJMP _0xBA
                 ; 0000 00DB                 }
                 ; 0000 00DC                 else
                 _0x89:
                 ; 0000 00DD                 {
                 ; 0000 00DE                  if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='A'&&rx_data[4]=='.'&&rx_data[5]=='7' ...
0002d6 91a0 0160 	LDS  R26,_rx_data
0002d8 35a0      	CPI  R26,LOW(0x50)
0002d9 f4e1      	BRNE _0x90
                +
0002da 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0002dc 34a9      	CPI  R26,LOW(0x49)
0002dd f4c1      	BRNE _0x90
                +
0002de 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0002e0 34ae      	CPI  R26,LOW(0x4E)
0002e1 f4a1      	BRNE _0x90
                +
0002e2 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0002e4 34a1      	CPI  R26,LOW(0x41)
0002e5 f481      	BRNE _0x90
                +
0002e6 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0002e8 32ae      	CPI  R26,LOW(0x2E)
0002e9 f461      	BRNE _0x90
                +
0002ea 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0002ec 33a7      	CPI  R26,LOW(0x37)
0002ed f441      	BRNE _0x90
                +
0002ee 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0002f0 33ad      	CPI  R26,LOW(0x3D)
0002f1 f421      	BRNE _0x90
                +
0002f2 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0002f4 33a1      	CPI  R26,LOW(0x31)
0002f5 f009      	BREQ _0x91
                 _0x90:
0002f6 c002      	RJMP _0x8F
                 _0x91:
                 ; 0000 00DF                  {
                 ; 0000 00E0                   PORTA.7=0;
0002f7 98df      	CBI  0x1B,7
                 ; 0000 00E1                   i=0;a=0;
0002f8 c0dd      	RJMP _0xBA
                 ; 0000 00E2                  }
                 ; 0000 00E3                  else
                 _0x8F:
                 ; 0000 00E4                  {
                 ; 0000 00E5                   if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='C'&&rx_data[4]=='.'&&rx_data[5]=='0 ...
0002f9 91a0 0160 	LDS  R26,_rx_data
0002fb 35a0      	CPI  R26,LOW(0x50)
0002fc f4e1      	BRNE _0x96
                +
0002fd 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0002ff 34a9      	CPI  R26,LOW(0x49)
000300 f4c1      	BRNE _0x96
                +
000301 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000303 34ae      	CPI  R26,LOW(0x4E)
000304 f4a1      	BRNE _0x96
                +
000305 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000307 34a3      	CPI  R26,LOW(0x43)
000308 f481      	BRNE _0x96
                +
000309 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
00030b 32ae      	CPI  R26,LOW(0x2E)
00030c f461      	BRNE _0x96
                +
00030d 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
00030f 33a0      	CPI  R26,LOW(0x30)
000310 f441      	BRNE _0x96
                +
000311 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000313 33ad      	CPI  R26,LOW(0x3D)
000314 f421      	BRNE _0x96
                +
000315 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000317 33a0      	CPI  R26,LOW(0x30)
000318 f009      	BREQ _0x97
                 _0x96:
000319 c002      	RJMP _0x95
                 _0x97:
                 ; 0000 00E6                   {
                 ; 0000 00E7                    PORTC.0=1;
00031a 9aa8      	SBI  0x15,0
                 ; 0000 00E8                    i=0;a=0;
00031b c0ba      	RJMP _0xBA
                 ; 0000 00E9                   }
                 ; 0000 00EA                   else
                 _0x95:
                 ; 0000 00EB                   {
                 ; 0000 00EC                    if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='C'&&rx_data[4]=='.'&&rx_data[5]==' ...
00031c 91a0 0160 	LDS  R26,_rx_data
00031e 35a0      	CPI  R26,LOW(0x50)
00031f f4e1      	BRNE _0x9C
                +
000320 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000322 34a9      	CPI  R26,LOW(0x49)
000323 f4c1      	BRNE _0x9C
                +
000324 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000326 34ae      	CPI  R26,LOW(0x4E)
000327 f4a1      	BRNE _0x9C
                +
000328 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
00032a 34a3      	CPI  R26,LOW(0x43)
00032b f481      	BRNE _0x9C
                +
00032c 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
00032e 32ae      	CPI  R26,LOW(0x2E)
00032f f461      	BRNE _0x9C
                +
000330 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000332 33a1      	CPI  R26,LOW(0x31)
000333 f441      	BRNE _0x9C
                +
000334 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000336 33ad      	CPI  R26,LOW(0x3D)
000337 f421      	BRNE _0x9C
                +
000338 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
00033a 33a0      	CPI  R26,LOW(0x30)
00033b f009      	BREQ _0x9D
                 _0x9C:
00033c c002      	RJMP _0x9B
                 _0x9D:
                 ; 0000 00ED                    {
                 ; 0000 00EE                     PORTC.1=1;
00033d 9aa9      	SBI  0x15,1
                 ; 0000 00EF                     i=0;a=0;
00033e c097      	RJMP _0xBA
                 ; 0000 00F0                    }
                 ; 0000 00F1                    else
                 _0x9B:
                 ; 0000 00F2                    {
                 ; 0000 00F3                     if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='C'&&rx_data[4]=='.'&&rx_data[5]== ...
00033f 91a0 0160 	LDS  R26,_rx_data
000341 35a0      	CPI  R26,LOW(0x50)
000342 f4e1      	BRNE _0xA2
                +
000343 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000345 34a9      	CPI  R26,LOW(0x49)
000346 f4c1      	BRNE _0xA2
                +
000347 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
000349 34ae      	CPI  R26,LOW(0x4E)
00034a f4a1      	BRNE _0xA2
                +
00034b 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
00034d 34a3      	CPI  R26,LOW(0x43)
00034e f481      	BRNE _0xA2
                +
00034f 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000351 32ae      	CPI  R26,LOW(0x2E)
000352 f461      	BRNE _0xA2
                +
000353 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000355 33a2      	CPI  R26,LOW(0x32)
000356 f441      	BRNE _0xA2
                +
000357 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
000359 33ad      	CPI  R26,LOW(0x3D)
00035a f421      	BRNE _0xA2
                +
00035b 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
00035d 33a0      	CPI  R26,LOW(0x30)
00035e f009      	BREQ _0xA3
                 _0xA2:
00035f c002      	RJMP _0xA1
                 _0xA3:
                 ; 0000 00F4                     {
                 ; 0000 00F5                      PORTC.2=1;
000360 9aaa      	SBI  0x15,2
                 ; 0000 00F6                      i=0;a=0;
000361 c074      	RJMP _0xBA
                 ; 0000 00F7                     }
                 ; 0000 00F8                     else
                 _0xA1:
                 ; 0000 00F9                     {
                 ; 0000 00FA                      if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='C'&&rx_data[4]=='.'&&rx_data[5]= ...
000362 91a0 0160 	LDS  R26,_rx_data
000364 35a0      	CPI  R26,LOW(0x50)
000365 f4e1      	BRNE _0xA8
                +
000366 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
000368 34a9      	CPI  R26,LOW(0x49)
000369 f4c1      	BRNE _0xA8
                +
00036a 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
00036c 34ae      	CPI  R26,LOW(0x4E)
00036d f4a1      	BRNE _0xA8
                +
00036e 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000370 34a3      	CPI  R26,LOW(0x43)
000371 f481      	BRNE _0xA8
                +
000372 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000374 32ae      	CPI  R26,LOW(0x2E)
000375 f461      	BRNE _0xA8
                +
000376 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
000378 33a0      	CPI  R26,LOW(0x30)
000379 f441      	BRNE _0xA8
                +
00037a 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
00037c 33ad      	CPI  R26,LOW(0x3D)
00037d f421      	BRNE _0xA8
                +
00037e 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
000380 33a1      	CPI  R26,LOW(0x31)
000381 f009      	BREQ _0xA9
                 _0xA8:
000382 c002      	RJMP _0xA7
                 _0xA9:
                 ; 0000 00FB                      {
                 ; 0000 00FC                      PORTC.0=0;
000383 98a8      	CBI  0x15,0
                 ; 0000 00FD                      i=0;a=0;
000384 c051      	RJMP _0xBA
                 ; 0000 00FE                      }
                 ; 0000 00FF                      else
                 _0xA7:
                 ; 0000 0100                      {
                 ; 0000 0101                       if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='C'&&rx_data[4]=='.'&&rx_data[5] ...
000385 91a0 0160 	LDS  R26,_rx_data
000387 35a0      	CPI  R26,LOW(0x50)
000388 f4e1      	BRNE _0xAE
                +
000389 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
00038b 34a9      	CPI  R26,LOW(0x49)
00038c f4c1      	BRNE _0xAE
                +
00038d 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
00038f 34ae      	CPI  R26,LOW(0x4E)
000390 f4a1      	BRNE _0xAE
                +
000391 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
000393 34a3      	CPI  R26,LOW(0x43)
000394 f481      	BRNE _0xAE
                +
000395 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
000397 32ae      	CPI  R26,LOW(0x2E)
000398 f461      	BRNE _0xAE
                +
000399 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
00039b 33a1      	CPI  R26,LOW(0x31)
00039c f441      	BRNE _0xAE
                +
00039d 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
00039f 33ad      	CPI  R26,LOW(0x3D)
0003a0 f421      	BRNE _0xAE
                +
0003a1 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0003a3 33a1      	CPI  R26,LOW(0x31)
0003a4 f009      	BREQ _0xAF
                 _0xAE:
0003a5 c002      	RJMP _0xAD
                 _0xAF:
                 ; 0000 0102                       {
                 ; 0000 0103                       PORTC.1=0;
0003a6 98a9      	CBI  0x15,1
                 ; 0000 0104                       i=0;a=0;
0003a7 c02e      	RJMP _0xBA
                 ; 0000 0105                       }
                 ; 0000 0106                       else
                 _0xAD:
                 ; 0000 0107                       {
                 ; 0000 0108                        if(rx_data[0]=='P'&&rx_data[1]=='I'&&rx_data[2]=='N'&&rx_data[3]=='C'&&rx_data[4]=='.'&&rx_data[5 ...
0003a8 91a0 0160 	LDS  R26,_rx_data
0003aa 35a0      	CPI  R26,LOW(0x50)
0003ab f4e1      	BRNE _0xB4
                +
0003ac 91a0 0161+LDS R26 , _rx_data + ( 1 )
                 	__GETB2MN _rx_data,1
0003ae 34a9      	CPI  R26,LOW(0x49)
0003af f4c1      	BRNE _0xB4
                +
0003b0 91a0 0162+LDS R26 , _rx_data + ( 2 )
                 	__GETB2MN _rx_data,2
0003b2 34ae      	CPI  R26,LOW(0x4E)
0003b3 f4a1      	BRNE _0xB4
                +
0003b4 91a0 0163+LDS R26 , _rx_data + ( 3 )
                 	__GETB2MN _rx_data,3
0003b6 34a3      	CPI  R26,LOW(0x43)
0003b7 f481      	BRNE _0xB4
                +
0003b8 91a0 0164+LDS R26 , _rx_data + ( 4 )
                 	__GETB2MN _rx_data,4
0003ba 32ae      	CPI  R26,LOW(0x2E)
0003bb f461      	BRNE _0xB4
                +
0003bc 91a0 0165+LDS R26 , _rx_data + ( 5 )
                 	__GETB2MN _rx_data,5
0003be 33a2      	CPI  R26,LOW(0x32)
0003bf f441      	BRNE _0xB4
                +
0003c0 91a0 0166+LDS R26 , _rx_data + ( 6 )
                 	__GETB2MN _rx_data,6
0003c2 33ad      	CPI  R26,LOW(0x3D)
0003c3 f421      	BRNE _0xB4
                +
0003c4 91a0 0167+LDS R26 , _rx_data + ( 7 )
                 	__GETB2MN _rx_data,7
0003c6 33a1      	CPI  R26,LOW(0x31)
0003c7 f009      	BREQ _0xB5
                 _0xB4:
0003c8 c002      	RJMP _0xB3
                 _0xB5:
                 ; 0000 0109                        {
                 ; 0000 010A                        PORTC.2=0;
0003c9 98aa      	CBI  0x15,2
                 ; 0000 010B                        i=0;a=0;
0003ca c00b      	RJMP _0xBA
                 ; 0000 010C                        }
                 ; 0000 010D                        else
                 _0xB3:
                 ; 0000 010E                        {
                 ; 0000 010F                         putsf("ER");
                +
0003cb e6ab     +LDI R26 , LOW ( 2 * _0x0 + ( 3 ) )
0003cc e0b0     +LDI R27 , HIGH ( 2 * _0x0 + ( 3 ) )
                 	__POINTW2FN _0x0,3
0003cd 940e 03e1 	CALL _putsf
                 ; 0000 0110                         putchar(13);putchar(10);
0003cf e0ad      	LDI  R26,LOW(13)
0003d0 d009      	RCALL _putchar
0003d1 e0aa      	LDI  R26,LOW(10)
0003d2 d007      	RCALL _putchar
                 ; 0000 0111                         putchar(rx_data[0]);
0003d3 91a0 0160 	LDS  R26,_rx_data
0003d5 d004      	RCALL _putchar
                 ; 0000 0112                         i=0;a=0;
                 _0xBA:
0003d6 2444      	CLR  R4
0003d7 2455      	CLR  R5
                 ; 0000 0113                        }
                 ; 0000 0114                       }
                 ; 0000 0115                      }
                 ; 0000 0116                     }
                 ; 0000 0117                    }
                 ; 0000 0118                   }
                 ; 0000 0119                  }
                 ; 0000 011A                 }
                 ; 0000 011B                }
                 ; 0000 011C               }
                 ; 0000 011D              }
                 ; 0000 011E             }
                 ; 0000 011F            }
                 ; 0000 0120           }
                 ; 0000 0121          }
                 ; 0000 0122         }
                 ; 0000 0123        }
                 ; 0000 0124       }
                 ; 0000 0125      }
                 ; 0000 0126     }
                 ; 0000 0127    }
                 ; 0000 0128   }
                 ; 0000 0129  }
                 ; 0000 012A 
                 ; 0000 012B  }
                 _0x38:
0003d8 cce5      	RJMP _0x2F
                 ; 0000 012C }
                 _0xB9:
0003d9 cfff      	RJMP _0xB9
                 ; .FEND
                 	#ifndef __SLEEP_DEFINED__
                 	#endif
                 
                 	.CSEG
                 _putchar:
                 ; .FSTART _putchar
0003da 93aa      	ST   -Y,R26
                 putchar0:
0003db 9b5d           sbis usr,udre
0003dc cffe           rjmp putchar0
0003dd 81e8           ld   r30,y
0003de b9ec           out  udr,r30
0003df 9621      	ADIW R28,1
0003e0 9508      	RET
                 ; .FEND
                 _putsf:
                 ; .FSTART _putsf
0003e1 93ba      	ST   -Y,R27
0003e2 93aa      	ST   -Y,R26
0003e3 931a      	ST   -Y,R17
                 _0x2000006:
0003e4 81e9      	LDD  R30,Y+1
0003e5 81fa      	LDD  R31,Y+1+1
0003e6 9631      	ADIW R30,1
0003e7 83e9      	STD  Y+1,R30
0003e8 83fa      	STD  Y+1+1,R31
0003e9 9731      	SBIW R30,1
0003ea 91e4      	LPM  R30,Z
0003eb 2f1e      	MOV  R17,R30
0003ec 30e0      	CPI  R30,0
0003ed f019      	BREQ _0x2000008
0003ee 2fa1      	MOV  R26,R17
0003ef dfea      	RCALL _putchar
0003f0 cff3      	RJMP _0x2000006
                 _0x2000008:
0003f1 e0aa      	LDI  R26,LOW(10)
0003f2 dfe7      	RCALL _putchar
0003f3 8118      	LDD  R17,Y+0
0003f4 9623      	ADIW R28,3
0003f5 9508      	RET
                 ; .FEND
                 
                 	.CSEG
                 
                 	.CSEG
                 
                 	.DSEG
                 _rx_data:
000160           	.BYTE 0x14
                 
                 	.CSEG
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 3 TIMES, CODE SIZE REDUCTION:13 WORDS
                 SUBOPT_0x0:
0003f6 940e 0405 	CALL _delay_ms
0003f8 98dd      	CBI  0x1B,5
0003f9 eca8      	LDI  R26,LOW(200)
0003fa e0b0      	LDI  R27,0
0003fb 940e 0405 	CALL _delay_ms
0003fd 9add      	SBI  0x1B,5
0003fe eca8      	LDI  R26,LOW(200)
0003ff e0b0      	LDI  R27,0
000400 9508      	RET
                 
                 ;OPTIMIZER ADDED SUBROUTINE, CALLED 8 TIMES, CODE SIZE REDUCTION:11 WORDS
                 SUBOPT_0x1:
000401 eca8      	LDI  R26,LOW(200)
000402 e0b0      	LDI  R27,0
000403 940c 0405 	JMP  _delay_ms
                 
                 
                 	.CSEG
                 _delay_ms:
000405 9610      	adiw r26,0
000406 f039      	breq __delay_ms1
                 __delay_ms0:
                +
000407 ed80     +LDI R24 , LOW ( 0x7D0 )
000408 e097     +LDI R25 , HIGH ( 0x7D0 )
                +__DELAY_USW_LOOP :
000409 9701     +SBIW R24 , 1
00040a f7f1     +BRNE __DELAY_USW_LOOP
                 	__DELAY_USW 0x7D0
00040b 95a8      	wdr
00040c 9711      	sbiw r26,1
00040d f7c9      	brne __delay_ms0
                 __delay_ms1:
00040e 9508      	ret
                 
                 ;END OF CODE MARKER
                 __END_OF_CODE:


RESOURCE USE INFORMATION
------------------------

Notice:
The register and instruction counts are symbol table hit counts,
and hence implicitly used resources are not counted, eg, the
'lpm' instruction without operands implicitly uses r0 and z,
none of which are counted.

x,y,z are separate entities in the symbol table and are
counted separately from r26..r31 here.

.dseg memory usage only counts static data declared with .byte

ATmega16A register use summary:
r0 :   4 r1 :   1 r2 :   0 r3 :   0 r4 :   4 r5 :   3 r6 :   0 r7 :   0 
r8 :   0 r9 :   0 r10:   0 r11:   0 r12:   0 r13:   0 r14:   0 r15:   0 
r16:   0 r17:   4 r18:   0 r19:   0 r20:   0 r21:   0 r22:   2 r23:   0 
r24:   9 r25:   3 r26: 374 r27:  13 r28:   3 r29:   1 r30:  57 r31:   5 
x  :   4 y  :  18 z  :   8 
Registers used: 17 out of 35 (48.6%)

ATmega16A instruction use summary:
.lds  :   0 .lds.l:   0 .sts  :   0 .sts.l:   0 adc   :   0 add   :   0 
adiw  :   4 and   :   0 andi  :   0 asr   :   0 bclr  :   0 bld   :   0 
brbc  :   0 brbs  :   0 brcc  :   0 brcs  :   0 break :   0 breq  :  26 
brge  :   0 brhc  :   0 brhs  :   0 brid  :   0 brie  :   0 brlo  :   0 
brlt  :   0 brmi  :   0 brne  : 159 brpl  :   0 brsh  :   0 brtc  :   0 
brts  :   0 brvc  :   0 brvs  :   0 bset  :   0 bst   :   0 call  :  16 
cbi   :  19 cbr   :   0 clc   :   0 clh   :   0 cli   :   1 cln   :   0 
clr   :   5 cls   :   0 clt   :   0 clv   :   0 clz   :   0 com   :   0 
cp    :   1 cpc   :   0 cpi   : 177 cpse  :   0 dec   :   1 des   :   0 
eor   :   0 fmul  :   0 fmuls :   0 fmulsu:   0 icall :   0 ijmp  :   0 
in    :   2 inc   :   1 jmp   :  23 ld    :   5 ldd   :   3 ldi   :  41 
lds   : 177 lpm   :   9 lsl   :   0 lsr   :   0 mov   :   4 movw  :   3 
mul   :   0 muls  :   0 mulsu :   0 neg   :   0 nop   :   0 or    :   0 
ori   :   0 out   :  21 pop   :   0 push  :   0 rcall :   5 ret   :   4 
reti  :   1 rjmp  :  52 rol   :   0 ror   :   0 sbc   :   0 sbci  :   1 
sbi   :  21 sbic  :   1 sbis  :   1 sbiw  :   6 sbr   :   0 sbrc  :   0 
sbrs  :   0 sec   :   0 seh   :   0 sei   :   1 sen   :   0 ser   :   0 
ses   :   0 set   :   0 sev   :   0 sez   :   0 sleep :   0 spm   :   0 
st    :  12 std   :   2 sts   :   0 sub   :   0 subi  :   1 swap  :   0 
tst   :   0 wdr   :   1 
Instructions used: 35 out of 116 (30.2%)

ATmega16A memory use summary [bytes]:
Segment   Begin    End      Code   Data   Used    Size   Use%
---------------------------------------------------------------
[.cseg] 0x000000 0x00081e   2044     34   2078   16384  12.7%
[.dseg] 0x000060 0x000174      0     20     20    1024   2.0%
[.eseg] 0x000000 0x000000      0      0      0     512   0.0%

Assembly complete, 0 errors, 3 warnings
